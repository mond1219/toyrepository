## 1.3 전략 패턴(stratege pattern), 정책 패턴(policy pattern)
- 객체의 행위를 바꾸고 싶은 경우 `직접` 수정하지 않고 전략이라고 부르는 `캡슐화한 알고리즘`을 컨텍스트 안에서 바꿔주면서 상호 교체가 가능
- 구매할 때 네이버페이, 카카오페이 등 다양한 방법으로 결제하는 것과 비슷
- 결제 방식의 `전략`만 바꿔서 두 가지 방식으로 결제하는 것을 구현

💚예시
고양이는 meow로 울고 사자는 roar로 우는것을 구현해 보자
어떤 동물이 어떤 말을 할지는 run time에 결정된다. 
Animal 인터페이스를 만들고, 동물 인터페이스를 받아서 고양이, 사자의 대한 정의를 만들어주면 된다. 
``` python 
class Animal:
  def spek(self):
    pass

class Cat(Animal):
  def speak(self)
    print('meow')

class Lion(Animal):
  def speak(self):
    print('roar')
#말을 하는 함수 생성
def makeSpeak(animal:Animal):

```


def makeSpeak(animal:Animal):# 말을 하는 함수 생성
  animal.speak()

  ef
  ```
